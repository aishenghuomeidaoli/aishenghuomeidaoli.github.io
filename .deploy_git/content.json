{"pages":[{"title":"","text":"关于 var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?08602829e40aed39037446fe7ea1aa6e\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })();","link":"/about/index.html"},{"title":"","text":"学习计划 2018-08 阅读中 《Docker — 从入门到实践》阅读中 《Docker生产环境实践指南》 var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?08602829e40aed39037446fe7ea1aa6e\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })();","link":"/scheme/index.html"}],"posts":[{"title":"使用Docker Compose快捷部署WEB服务、分布式任务队列项目实践","text":"Docker 容器技术解决了项目部署时开发、测试、预演、生产环境差异的影响。可以为项目的不同服务创建独立的容器，使项目模块化，降低了耦合性。当同一宿主机中存在多个容器时，容器的统一管理便显得很必要。Docker Compose具有管理多个容器的功能，Docker Compose通过调用Docker的接口，从 yaml 文件中读取容器配置，对容器进行统一管理。 项目架构 HaProxy + Django + Celery + MySQL + Redis： HaProxy，作为项目的代理程序，将请求转发至web服务器，并可以实现负载均衡； Django，提供web服务，在接口中调用Celery创建任务，作为生产者，在任务函数中执行任务，作为消费者； Celery，提供分布式任务队列服务； MySQL，为web服务提供数据库服务，存储Celery的处理结果； Redis，作为Celery的消息中间件，也可作为web的缓存服务器。","link":"/技术/使用docker-compose快捷部署web服务、分布式任务队列项目实践/"},{"title":"周末小记","text":"上周末5月12日，和女友骑车出门，行程满满： 丰台区出入境管理局 庆丰包子铺-卢沟桥晓月苑店 绿堤公园 丰台区图书馆 复联3 小结 丰台区出入境管理局不知是雾还是霾，天灰蒙蒙的，闷热。 骑车出门，手机开着导航，一路来到了丰台区出入境管理局，汗流浃背。 作为一个北京人，她竟然没吃过庆丰包子，于是办完护照向公园出发，顺路去庆丰包子吃早午饭。。。 庆丰包子铺-卢沟桥晓月苑店庆丰包子铺-卢沟桥晓月苑店位置比较偏，前几天来卢沟桥派出所办工作居住证在这儿吃过，人不多，比较实惠。 水足饭饱之后，向绿堤公园出发 绿堤公园绿堤公园是个免费、开放的公园，可以骑车进来，里面有个大湖，植物比较多。即便如此，也抵不过北京的雾霾。。。 在里面锁了一辆车，骑着一辆，人少，走走停停，很是悠闲。 湖边有人养了一窝金毛，两只大金毛，几只小金毛。 新入设备松下LX10，随拍几张： 丰台区图书馆丰台图书馆离住的地方不远，来看看需不需要办卡，女友打算以后在这儿学习。 馆里很安静，有个自习室，去的时候人不少，但是有座位，自习室挺热的，里面有两三个柜式空调，但是没开。问了工作人员，自习室不需要办卡。 复联3看完图书馆，订了个电影票，电影院不是特别远。骑车过去了。也到了吃晚饭的时间。 小结比一个人宅在家里强多了，就是有点累。。。 var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?08602829e40aed39037446fe7ea1aa6e\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })();","link":"/杂记/周末小记/"},{"title":"探索Docker容器下MySQL的数据持久化","text":"背景介绍 Docker容器下MySQL数据持久化 背景介绍容器化技术为开发带来了巨大的便捷，Docker作为容器化技术的典型代表，广泛的应用在工程生产中。同时，以Docker为基础的其他技术，也极大地丰富了Docker的功能，如Python编写的容器编排技术Docker Compose，谷歌开源的容器管理技术Kubernetes，都为传统的开发、部署、维护的工作打开了新世界的大门。 最近打算用docker-compose创建一个 网页客户端（web）+ 服务端接口（api）+ 任务队列（celery）的项目。按照传统的部署方式，需要在宿主机上启动的进程有：数据库（MySQL/MongoDB）、缓存（Redis/RabbitMQ/..）、任务队列（celery）、后端API（Python/..）、HTTP服务器（Nginx/Apache）。缺点有一些：初次部署环境配置较多、多个进程维护成本高。 如果采用容器的方式部署，首先解决了本地开发与生产环境差异产生的影响；其次，采用Docker Compose或Kubernetes更加符合模块化开发的风格，降低了耦合性，提高了可维护性。 最近在看Docker Compose与Kubernetes，其中容器相互引用利用的是容器名，在创建容器时将指定的容器名写入hosts，这样就可以起到和localhost一样的效果。但如果在宿主机上运行的进程，比如mysql-server或内部其他接口，是不能从容器内进行调用的，容器的端口映射只能将端口进行暴露，只能在宿主机内单向连通。 对此，我想到的解决有两个：一个是通过公网IP进行连接；另一个就是将这些服务进程运行在容器内。 第一个办法这无疑降低了性能，提高了网络延迟，不可取。第二个办法对于一般的服务可行，但是对于数据库需要考虑数据持久化，不能因为容器停止、重启等造成数据的丢失。 Docker容器下MySQL数据持久化前提mysql-server镜像要比mysql镜像小几百兆，更为精简；MySQL 8.0版本在用户认证机制上做了变动，在探索过程中没有找到较好的解决办法，只好选择 MySQL 5.7版本。 卷挂载根据博客Docker MySQL Persistence，与mysql/mysql-server镜像文档的内容。 MySQL支持数据的持久化，只要将指定的宿主机目录挂在到MySQL默认数据存储路径 /var/lib/mysql中即可。 1234docker run -it --name mysqldb \\-v /path/to/local-mysql:/var/lib/mysql \\-e MYSQL_ROOT_PASSWORD=password \\-d mysql/mysql-server:5.7 将此目录以相同方式挂载到其他容器中，即可以实现Docker容器下MySQL数据的持久化，但被挂载的目录只能被一个MySQL容器使用，不能多个MySQL容器同时挂载。 1234docker run -it --name mysqldb \\-v /path/to/local-mysql:/var/lib/mysql \\-e MYSQL_ROOT_PASSWORD=password \\-d mysql/mysql-server:5.7 开启远程访问在解决数据持久化之后，需要解决连接问题。 首先是暴露端口，增加-p参数： 12345docker run -it --name mysqldb \\-v /path/to/local-mysql:/var/lib/mysql \\-e MYSQL_ROOT_PASSWORD=password \\-p 3306:3306 \\-d mysql/mysql-server:5.7 其次是远程访问，需要将指定用户的访问地址host设为访问IP或%，这样可以从宿主机，或其他容器连接。 如果使用的是root用户，则需设置MYSQL_ROOT_HOST环境变量： 123456docker run -it --name mysqldb \\-v /path/to/local-mysql:/var/lib/mysql \\-e MYSQL_ROOT_PASSWORD=password \\-e MYSQL_ROOT_HOST=% \\-p 3306:3306 \\-d mysql/mysql-server:5.7 也可以创建新用户，此时需要额外的三个环境变量：用户名MYSQL_USER、用户密码MYSQL_PASSWORD、授权该用户的数据库名MYSQL_DATABASE，此时创建的用户的访问host为 %，即任意IP： 12345678docker run -it --name mysqldb \\-v /path/to/local-mysql:/var/lib/mysql \\-e MYSQL_USER=new_username \\-e MYSQL_PASSWORD=new_user_password \\-e MYSQL_DATABASE=user_database \\-e MYSQL_ROOT_PASSWORD=password \\-p 3306:3306 \\-d mysql/mysql-server:5.7 var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?08602829e40aed39037446fe7ea1aa6e\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })();","link":"/技术/探索docker容器下mysql的数据持久化/"}],"tags":[{"name":"Docker","slug":"Docker","link":"/tags/Docker/"},{"name":"Docker Compose","slug":"Docker-Compose","link":"/tags/Docker-Compose/"},{"name":"HaProxy","slug":"HaProxy","link":"/tags/HaProxy/"},{"name":"Django","slug":"Django","link":"/tags/Django/"},{"name":"Celery","slug":"Celery","link":"/tags/Celery/"},{"name":"MySQL","slug":"MySQL","link":"/tags/MySQL/"},{"name":"Redis","slug":"Redis","link":"/tags/Redis/"},{"name":"周末","slug":"周末","link":"/tags/周末/"},{"name":"游玩","slug":"游玩","link":"/tags/游玩/"}],"categories":[{"name":"技术","slug":"技术","link":"/categories/技术/"},{"name":"杂记","slug":"杂记","link":"/categories/杂记/"}]}